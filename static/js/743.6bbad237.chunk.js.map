{"version":3,"file":"static/js/743.6bbad237.chunk.js","mappings":"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","sources":["components/Chart/DrawChart.js","components/Chart/DonutChart.js","components/Widget/Widget.js","views/Dashboard/index.js"],"sourcesContent":["import * as d3 from \"d3\";\r\n\r\nconst drawChart = (element, data) => {\r\n  const colors = [\"#05BBD2\", \"#2070C4\", \"#B57EDC\", \"#F5C842\", \"#37D400\"];\r\n  const boxSize = 500;\r\n\r\n  d3.select(element).select(\"svg\").remove(); // Remove the old svg\r\n  // Create new svg\r\n  const svg = d3\r\n    .select(element)\r\n    .append(\"svg\")\r\n    .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\r\n    .attr(\"height\", \"100%\")\r\n    .attr(\"width\", \"100%\")\r\n    .attr(\"viewBox\", `0 0 ${boxSize} ${boxSize}`)\r\n    .append(\"g\")\r\n    .attr(\"transform\", `translate(${boxSize / 2}, ${boxSize / 2})`);\r\n\r\n  const maxValue = data.reduce((cur, val) => Math.max(cur, val.value), 0);\r\n  const arcGenerator = d3\r\n    .arc()\r\n    .cornerRadius(10)\r\n    .padAngle(0.02)\r\n    .innerRadius(100)\r\n    .outerRadius((d) => {\r\n      return 250 - (maxValue - d.value);\r\n    });\r\n\r\n  const pieGenerator = d3\r\n    .pie()\r\n    .startAngle(-0.75 * Math.PI)\r\n    .value((d) => d.value);\r\n\r\n  const arcs = svg.selectAll().data(pieGenerator(data)).enter();\r\n  arcs\r\n    .append(\"path\")\r\n    .attr(\"d\", arcGenerator)\r\n    .style(\"fill\", (d, i) => colors[i % data.length])\r\n    .transition()\r\n    .duration(700).delay(300)\r\n    .attrTween(\"d\", function (d) {\r\n      const i = d3.interpolate(d.startAngle, d.endAngle);\r\n      return function (t) {\r\n        d.endAngle = i(t);\r\n        return arcGenerator(d);\r\n      };\r\n    });\r\n\r\n  // Append text labels\r\n  arcs\r\n    .append(\"text\")\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .text((d) => `${d.data.value}%`) // label text\r\n    .style(\"fill\", \"#fff\") // label color\r\n    .style(\"font-size\", \"30px\") // label size\r\n    .attr(\"transform\", (d) => {\r\n      const [x, y] = arcGenerator.centroid(d);\r\n      return `translate(${x}, ${y})`;\r\n    })\r\n    .style(\"font-size\", 0)\r\n    .transition()\r\n    .duration(700)\r\n    .style(\"font-size\", \"20px\");\r\n\r\n  // Add inner border\r\n  svg\r\n    .append(\"circle\")\r\n    .attr(\"cx\", 0)\r\n    .attr(\"cy\", 0)\r\n    .attr(\"r\", 100) // should be same as innerRadius value\r\n    .attr(\"stroke\", \"#143F8A\")\r\n    .attr(\"fill\", \"transparent\")\r\n    .transition()\r\n    .duration(700)\r\n    .attr(\"stroke-width\", 8);\r\n};\r\n\r\nexport default drawChart;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport drawChart from \"./DrawChart\";\r\n\r\nconst DonutChart = ({ data }) => {\r\n  const ref = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (ref.current) {\r\n      drawChart(ref.current, data);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [ref]);\r\n\r\n  return (\r\n    <div className=\"container-chart\">\r\n      <div className=\"graph-chart\" ref={ref} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(DonutChart);","\r\n\r\nimport React from 'react';\r\nimport './widget.scss';\r\n\r\nconst Widget = ({widgetData}) => {\r\n    \r\n    const {main, name, sys, weather} = widgetData;\r\n    const icon = `https://openweathermap.org/img/wn/${weather[0][\"icon\"]}@4x.png`;\r\n    var today = new Date();\r\n\r\n    return (\r\n    \r\n        <div className=\"widget\">\r\n            <div className=\"weatherIcon\"><img className=\"city-icon\" src={icon} alt={weather[0][\"main\"]}/></div>\r\n            <div className=\"weatherInfo\">\r\n                <div className=\"temperature\"><span>{Math.round(main.temp)}&deg;</span></div>\r\n                <div className=\"description\">    \r\n                <div className=\"weatherCondition\">{weather[0][\"description\"]}</div>    \r\n                <div className=\"place\">{name}, <sup>{sys.country}</sup></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"date\">{today.toDateString()}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Widget","\r\n\r\nimport react, {useState, useEffect} from 'react'; \r\nimport './index.scss';\r\nimport * as d3 from 'd3'\r\nimport DonutChart from '../../components/Chart/DonutChart';\r\nimport axios from '../../resources/axios';\r\nimport Widget from '../../components/Widget/Widget';\r\n\r\nfunction UserDashbaord() {\r\n  \r\n  const [data, setData] = useState([]);\r\n  const [widgetData, setWidgetData] = useState([]);\r\n\r\n  const username = localStorage.getItem('username');\r\n\r\n  useEffect(() => {\r\n    axios.get(`count/${username}`)\r\n      .then(res=> {\r\n        // console.log(res.data)\r\n        setData(res.data)\r\n      })\r\n      .catch(err => console.log(err))\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        let lat = position.coords.latitude;\r\n        let lon = position.coords.longitude;\r\n\r\n        // API ID\r\n        const api = \"902c8175f68c5e6434de3dc741f3afb2\";\r\n        // API URL\r\n        const url =\r\n          `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&` +\r\n          `lon=${lon}&appid=${api}&units=metric`;\r\n\r\n        fetch(url)\r\n          .then((response) => {\r\n            return response.json()\r\n          })\r\n          .then((data) => {\r\n            setWidgetData(data)\r\n          })\r\n          .catch(err => console.log(err))\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n\r\n  //   // Create a dataset of pets and the amount of people that own them\r\n  //   let dataSet = [\r\n  //     {subject: \"complete\", count: 150},\r\n  //     {subject: \"incomplete\", count: 75},\r\n  //     {subject: \"pending\", count: 135},\r\n  //     {subject: \"total\", count: 240}\r\n  //   ]\r\n    \r\n  //   // Bar Chart:\r\n  //     const getMax = () => { // Calculate the maximum value in the DataSet\r\n  //       let max = 0\r\n  //       dataSet.forEach((dt) => {\r\n  //           if(dt.count > max) {max = dt.count}\r\n  //       })\r\n  //       return max\r\n  //     }\r\n      \r\n  //     // Create each of the bars and then set them all to have the same height(Which is the max value)\r\n  //     d3.select('#BarChart').selectAll('div').data(dataSet) \r\n  //     .enter().append('div').classed('bar', true).style('height', `${getMax()}px`)\r\n  //     .append(\"text\")\r\n  //     .attr(\"text-anchor\", \"middle\")\r\n  //     .text(dt => dt.subject + \": \" + dt.count) // label text\r\n  //     .style(\"color\", \"#fff\") // label color\r\n  //     .transition()\r\n  //     .duration(700)\r\n  //     .style(\"font-size\", \"12.5px\");\r\n  \r\n  //     //Transition the bars into having a height based on their corresponding count value\r\n  //     d3.select('#BarChart')\r\n  //     .selectAll('.bar')\r\n  //     .transition()\r\n  //     .duration(700)\r\n  //     .style('height', bar => `${bar.count}px`)\r\n  //     .style('width', '80px')\r\n  //     .style('margin-right', '10px')\r\n  //     .delay(300) // Fix their width and margin\r\n      \r\n  // }, [])\r\n  \r\n  let user = localStorage.getItem('username');\r\n\r\n  return (\r\n    <>\r\n    <div className='my-profile'>\r\n        <p style={{margin: '0px', color: '#fff'}}>Logged in as: {user.toUpperCase()}</p>\r\n    </div>\r\n    <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\r\n      {/* <div>\r\n      <div id=\"BarChart\"></div>\r\n      </div> */}\r\n      {data.length>0 && <DonutChart data={data} />}\r\n      {Object.keys(widgetData).length !== 0  ? <Widget widgetData={widgetData} /> : null}\r\n    </div>\r\n    <div className='status'>\r\n        <div><span className=\"dot col-1\"></span> <p>Complete</p></div>\r\n        <div><span className=\"dot col-2\"></span> <p>Incomplete</p></div>\r\n        <div><span className=\"dot col-3\"></span> <p>Pending</p></div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserDashbaord;"],"names":["element","data","colors","boxSize","d3","select","remove","svg","append","attr","maxValue","reduce","cur","val","Math","max","value","arcGenerator","cornerRadius","padAngle","innerRadius","outerRadius","d","pieGenerator","startAngle","PI","arcs","selectAll","enter","style","i","length","transition","duration","delay","attrTween","endAngle","t","text","centroid","x","y","DonutChart","ref","useRef","useEffect","current","drawChart","className","React","widgetData","main","name","sys","weather","icon","today","Date","src","alt","round","temp","country","toDateString","useState","setData","setWidgetData","username","localStorage","getItem","axios","then","res","catch","err","console","log","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","url","fetch","response","json","user","margin","color","toUpperCase","display","alignItems","justifyContent","Object","keys"],"sourceRoot":""}